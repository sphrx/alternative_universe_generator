[tool.poetry]
name = "alternative-universe-generator"
version = "0.1.0"
description = "A generator for alternative historical scenarios"
authors = ["sphrx <vovo4a@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
faker = "^28.4.1"
python-dotenv = "^1.0.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.3"
ruff = "^0.1.4"
pre-commit = "^3.8.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry-auto-export.exports]
# https://github.com/Ddedalus/poetry-auto-export
output = "requirements.txt"
without = ["dev"]


# Link to all settings for ruff - https://docs.astral.sh/ruff/settings

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv"
]

line-length = 100
src = ["components", "common"]

[lint]
select = [
    "I", # isort
    "D", # pydocstyle
    "PL", # Pylint
]

# Rules which pydocstyle google styleguide ignores (https://www.pydocstyle.org/en/stable/error_codes.html#default-conventions)
# Added manually according to Google Styleguide
extend-select = [
    "D204",
    "D213",
    "D215",
    "D400"
]

# Settings for pydocstyle
[lint.pydocstyle]
convention = "google"

# Settings for isort
[lint.isort]
lines-after-imports = 2
force-single-line = true
order-by-type = false
known-local-folder = ["components", "common"]

[project]
name = "ruff-pre-commit"
version = "0.0.0"
dependencies = [
    "ruff==0.6.4",
]

[project.optional-dependencies]
dev = [
    "packaging~=23.1",
    "urllib3>=2.0.5,<3.0.0",
]
